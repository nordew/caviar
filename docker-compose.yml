version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_caviar_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DBNAME}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DBNAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly_caviar_db
    command: --alsologtostderr
    ports:
      - '${DRAGONFLY_PORT}:6379'
    volumes:
      - dragonfly_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio_caviar_s3
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    ports:
      - '${MINIO_PORT}:9000'
      - '${MINIO_CONSOLE_PORT}:9001'
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: caviar_api
    env_file:
      - .env
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      dragonfly:
        condition: service_started
      minio:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  dragonfly_data:
  minio_data:
